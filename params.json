{
  "name": "Quantum-os.GitHub.io",
  "tagline": "",
  "body": "###Identify Even the Most Unlikely Discrepancies Caused by Code Changes\r\n\r\nThe Progeni Corporation announces the release of ThreeRs, Version 3.0. ThreeRs, which stands for Record, Replay, and Research, is a toolset used to confirm the integrity of modified code and identify the unanticipated impact of change after maintenance changes, migration or conversion to target platforms. ThreeRs can be used in scenarios such as:\r\n\r\nMonitoring reliable, known, repeatable test transactions on systems and applications\r\nTesting hardware and software upgrades\r\nFunctional regression and robustness testing of new revisions of software\r\nThreeRs confirms that throughout your enterprise intended changes - and only the intended changes - have been implemented smoothly and accurately. In other terms it reports differences in data. The advantage of ThreeRs is that it not only confirms that intended changes have taken effect as planned, but also searches for and identifies even the most unlikely discrepancies.\r\n\r\n###Dependable Results\r\n\r\nThreeRs is designed to help you substantially reduce your errors that normally occur through maintenance activities. ThreeRs is a testing toolkit that captures data from user terminals, client workstations and distributed network sessions. It subsequently presents the data to the application essentially substituting for those user terminals, client workstations and distributed network sessions. ThreeRs will help you find more bugs faster and you will be able to foresee the effect of changes. You will have the personal assurance that you have got it right, that your systems work, and that they perform under load, because you have tested them. The types of results a user can achieve are:\r\n\r\nConfidence in delivery of service\r\nGreater end-user satisfaction\r\nQuality Assurance\r\nLess wasted administration resources\r\nEarly detection of problems\r\nStaff productivity\r\nCompany profitability\r\nReduced costs\r\nReduced risks\r\nFaster introduction of applications\r\nMaximized return on investment\r\nImproved reliability commonly known as peace of mind\r\n\r\n\r\n###A Few Features of ThreeRs\r\n\r\nSome of the key features you will quickly recognize in your use of ThreeRs include:\r\n\r\nEnsures that only the intended changes have taken place.\r\n\r\nAutomates many manual QA tasks\r\nSupport a proven standard methodology\r\nPrevents haphazard and incomplete testing\r\nCan be applied to both batch and on-line\r\nFits into an existing environment\r\nSaves time and money\r\nSimplifies regression testing\r\nMinimizes disruption of normal production operations\r\nReduces the impact of the project on staff\r\nIncludes powerful customization features.\r\nUser-friendly Windows interface\r\nAudit trails for reporting\r\nBatch and On-line Testing\r\n\r\nThe following is brief overview of the batch testing process.\r\n\r\nRecord. For batch testing, this involves capturing a set of control data. To do this, an environment is set up using a clean and backed up copy of the necessary database and other files that the application uses. The prior-to-change or control version of the application is then installed in this environment, along with any necessary workflow files. The batch programs are then ran in proper sequence, either manually or using workflow files.\r\n\r\nAfter completion of processing, data is extracted from database and flat files according to a test scenario specified by the user to ThreeRs. These extracted data files and any printer or other outputs are saved away as the control set.\r\n\r\nReplay. Replay consists of running the converted programs under the same environment as the control set. The test environment is recreated as before only this time with the modified or test application. The backed up versions of the starting database and other files from the record phase should be used this time to set the environment up. The same process as in the record phase is followed.\r\n\r\nThe two sets of saved output and extracted results from the Record session and the Reply session are then used for the research phase. When the Record and Replay sessions are conducted in a host (non PC), the results (control and new) files are transferred to the ThreeRs environment.\r\n\r\nResearch. This stage consists of researching the results obtained from the Replay. A set of tailored utilities compares the corresponding files from the control and test sets and produces reports highlighting the differences. If necessary the utilities can be made to include intelligent filters. The reports also print a summary for each set of compares. By highlighting the differences between the control and test set result files, the compare reports serve two purposes. First, it provides verification that the intended changes made to the application are producing the desired differences. Second, it highlights any undesired side effects that the changes may have caused. Differences highlighted by the compare reports that cannot be explained by changes made to the application needs to be researched and the necessary corrective action taken.\r\n\r\nThe replay and research processes can be repeated till the compare reports show all intended and no unexplained or undesirable differences.\r\n\r\nThe compare reports cover print outputs as well as data structures extracted from databases. From processing the same transactions by the control and modified application sets, all potential differences caused by the changes made to the application maybe exposed by user defined test scenarios.\r\n\r\nThe compare utilities for the research phase are designed to run in Windows environment on a IBM-compatible PC. ThreeRs offers integration with the users own data transfer. Facilities to download the test result files to the micro will therefore be necessary.\r\n\r\n###Key Enhancements for ThreeRs Release 3.0\r\n\r\nWindows 32-bit format. The PC user interface of the product is in Windows 32-bit format and was written using Progeni's 1Spec Workbench.\r\n\r\nNew parameter choices. New parameters have been added that allow you to:\r\n\r\nDirect what to do when a data extract or compare report file of the same name already exists\r\nSet a limit on the number of differences for comparison reports. In each case that this limit is reached, the comparison program will quit\r\nOverride the global match factor parameter (for \"record\" type comparison reports) with a different value for individual structures\r\nSpecify the number of records to be extracted as a parameter for individual structures\r\nAutomatically reapply updates made to various parameters, like host extract filenames, when the extract programs and parameter files get recreated\r\nUnisys ClearPath and UNIX users. Unisys ClearPath and UNIX users can now match the file nodes of data extract files on the host machine with the corresponding file paths on the PC.\r\n\r\nCustomized Banners. Customized banners may now be defined for the comparison reports.\r\n\r\nText Screens Converted to GUI. All character text screens have been converted to Windows GUI.\r\n\r\nOn-line Help. Context sensitive on-line Help facility is included.\r\n\r\nNew and Enhanced Screens. New screens have been added and existing screens enhanced to expand the users ability to set and more efficiently manage parameters. Some of the new/enhanced screens include:\r\n\r\nGlobal Parameter Maintenance screen\r\nData Schema Definition screen\r\nData Extract Parameter screen\r\nCompare Report Customization screen\r\nAll screens are linked to the \"Command Central\" main window.\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}